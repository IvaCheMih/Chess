{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "Fiber Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/",
    "paths": {
        "/game/": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "create new game.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "create new game.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "game",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGameBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGameResponse"
                        }
                    }
                }
            }
        },
        "/game/{gameId}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "get game.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "get game.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "gameId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetGameResponse"
                        }
                    }
                }
            }
        },
        "/game/{gameId}/board": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "get board.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board"
                ],
                "summary": "get board.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "gameId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetBoardResponse"
                        }
                    }
                }
            }
        },
        "/game/{gameId}/give-up": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "do give-up.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "give-up"
                ],
                "summary": "do give-up.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "gameId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    }
                }
            }
        },
        "/game/{gameId}/history": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "get history.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "history"
                ],
                "summary": "get history.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "gameId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetHistoryResponse"
                        }
                    }
                }
            }
        },
        "/game/{gameId}/move": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "do move.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "move"
                ],
                "summary": "do move.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "gameId",
                        "in": "path"
                    },
                    {
                        "description": "move",
                        "name": "move",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DoMoveBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Move"
                        }
                    }
                }
            }
        },
        "/session/": {
            "post": {
                "description": "create new session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "create new session.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "session",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSessionResponse"
                        }
                    }
                }
            }
        },
        "/user/": {
            "post": {
                "description": "create new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create new user.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserResponse"
                        }
                    }
                }
            }
        },
        "/user/sign-in/telegram/": {
            "post": {
                "description": "telegram sign-in.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "telegram sign-in.",
                "parameters": [
                    {
                        "description": "request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TelegramSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TelegramSignInResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BoardCellEntity": {
            "type": "object",
            "properties": {
                "figureId": {
                    "type": "integer"
                },
                "indexCell": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateGameBody": {
            "type": "object",
            "properties": {
                "isWhite": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateGameResponse": {
            "type": "object",
            "properties": {
                "blackKingCastling": {
                    "type": "boolean"
                },
                "blackRookACastling": {
                    "type": "boolean"
                },
                "blackRookHCastling": {
                    "type": "boolean"
                },
                "blackUserId": {
                    "type": "integer"
                },
                "gameId": {
                    "type": "integer"
                },
                "isCheckBlack": {
                    "type": "boolean"
                },
                "isCheckWhite": {
                    "type": "boolean"
                },
                "isEnded": {
                    "type": "boolean"
                },
                "isStarted": {
                    "type": "boolean"
                },
                "lastPawnMove": {
                    "type": "integer"
                },
                "side": {
                    "type": "boolean"
                },
                "whiteKingCastling": {
                    "type": "boolean"
                },
                "whiteRookACastling": {
                    "type": "boolean"
                },
                "whiteRookHCastling": {
                    "type": "boolean"
                },
                "whiteUserId": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateSessionRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.CreateSessionResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "telegramId": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.DoMoveBody": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "newFigure": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "dto.GetBoardResponse": {
            "type": "object",
            "properties": {
                "boardCells": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BoardCellEntity"
                    }
                }
            }
        },
        "dto.GetGameResponse": {
            "type": "object",
            "properties": {
                "black_king_castling": {
                    "type": "boolean"
                },
                "black_rook_acastling": {
                    "type": "boolean"
                },
                "black_rook_hcastling": {
                    "type": "boolean"
                },
                "black_user_id": {
                    "type": "integer"
                },
                "end_reason": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "is_check_black": {
                    "type": "boolean"
                },
                "is_check_white": {
                    "type": "boolean"
                },
                "is_ended": {
                    "type": "boolean"
                },
                "is_started": {
                    "type": "boolean"
                },
                "last_loss": {
                    "type": "integer"
                },
                "last_pawn_move": {
                    "type": "integer"
                },
                "side": {
                    "type": "boolean"
                },
                "white_king_castling": {
                    "type": "boolean"
                },
                "white_rook_acastling": {
                    "type": "boolean"
                },
                "white_rook_hcastling": {
                    "type": "boolean"
                },
                "white_user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.GetHistoryResponse": {
            "type": "object",
            "properties": {
                "moves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Move"
                    }
                }
            }
        },
        "dto.TelegramSignInRequest": {
            "type": "object",
            "properties": {
                "chatId": {
                    "type": "integer"
                },
                "telegramId": {
                    "type": "integer"
                }
            }
        },
        "dto.TelegramSignInResponse": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.EndgameReason": {
            "type": "string",
            "enum": [
                "NotEndgame",
                "Mate",
                "Pat",
                "Repetition",
                "NoLosses"
            ],
            "x-enum-varnames": [
                "NotEndgame",
                "Mate",
                "Pat",
                "Repetition",
                "NoLosses"
            ]
        },
        "models.Game": {
            "type": "object",
            "properties": {
                "blackKingCastling": {
                    "type": "boolean"
                },
                "blackRookACastling": {
                    "type": "boolean"
                },
                "blackRookHCastling": {
                    "type": "boolean"
                },
                "blackUserId": {
                    "type": "integer"
                },
                "endReason": {
                    "$ref": "#/definitions/models.EndgameReason"
                },
                "id": {
                    "type": "integer"
                },
                "isCheckBlack": {
                    "type": "boolean"
                },
                "isCheckWhite": {
                    "type": "boolean"
                },
                "isEnded": {
                    "type": "boolean"
                },
                "isStarted": {
                    "type": "boolean"
                },
                "lastLoss": {
                    "type": "integer"
                },
                "lastPawnMove": {
                    "type": "integer"
                },
                "side": {
                    "type": "boolean"
                },
                "whiteKingCastling": {
                    "type": "boolean"
                },
                "whiteRookACastling": {
                    "type": "boolean"
                },
                "whiteRookHCastling": {
                    "type": "boolean"
                },
                "whiteUserId": {
                    "type": "integer"
                }
            }
        },
        "models.Move": {
            "type": "object",
            "properties": {
                "figureId": {
                    "type": "integer"
                },
                "fromId": {
                    "type": "integer"
                },
                "gameId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isCheckBlack": {
                    "type": "boolean"
                },
                "isCheckWhite": {
                    "type": "boolean"
                },
                "killedFigureId": {
                    "type": "integer"
                },
                "moveNumber": {
                    "type": "integer"
                },
                "newFigureId": {
                    "type": "integer"
                },
                "toId": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "JWT security accessToken. Please add it in the format \"Bearer {AccessToken}\" to authorize your requests.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}